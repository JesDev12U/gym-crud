/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package interfaces;

import gym.*;
import java.sql.*;
import java.beans.PropertyChangeEvent;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;


/**
 *
 * @author jesus
 */
public class InscripcionKick extends javax.swing.JInternalFrame {
    public static final double montoKickDiario = 20.5;
    private int age;
    /**
     * Creates new form InscripcionKick
     */
    public InscripcionKick() {
        initComponents();
        calendarFecNac.getDateEditor().setEnabled(false);
        Calendar defaultDate = Calendar.getInstance();
        defaultDate.set(2004, Calendar.JANUARY, 1); // Establecer la fecha: 1 de enero de 2023
        calendarFecNac.setDate(defaultDate.getTime());
        
        javax.swing.JLabel arrayLbl[] = new javax.swing.JLabel[4];
        arrayLbl[0] = labelCampoReq1;
        arrayLbl[1] = labelCampoReq2;
        arrayLbl[2] = labelCampoReq3;
        arrayLbl[3] = labelCampoReq4;
        btnRealizarIns.setEnabled(false);
        Gym.iniciarForm(arrayLbl);
        labelCarga.setVisible(false);
        calendarFecNac.addPropertyChangeListener((PropertyChangeEvent evt) -> {
            if ("date".equals(evt.getPropertyName())) {
                habilitarBoton();
            }
        });
        //System.out.println(calendarFecNac.getDate());
    }

    private void habilitarBoton() {
    Date selectedDate = calendarFecNac.getDate();

    if (selectedDate != null) {
        // Convertir la fecha de nacimiento a LocalDate (Java 8 en adelante)
        LocalDate birthDate = selectedDate.toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate();

        // Calcular la edad actual
        LocalDate currentDate = LocalDate.now();
        Period period = Period.between(birthDate, currentDate);
        age = period.getYears();

        // Validar si la edad está entre 5 y 100 años
        if (age >= 5 && age <= 100) {
            if (!txtNom.getText().isEmpty() && !txtApPat.getText().isEmpty()
                    && !txtApMat.getText().isEmpty() && !txtTel.getText().isEmpty()) {
                // La fecha es válida y todos los campos están llenos
                btnRealizarIns.setEnabled(true);
                
                return;
            }
            
        } else{
            JOptionPane.showMessageDialog(null, "La fecha que ingresaste es inválida", 
            "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Si la fecha es inválida o algún campo está vacío, deshabilitar el botón
    
    btnRealizarIns.setEnabled(false);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApPat = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApMat = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTel = new javax.swing.JTextField();
        btnRealizarIns = new javax.swing.JButton();
        labelCarga = new javax.swing.JLabel();
        calendarFecNac = new com.toedter.calendar.JDateChooser();
        labelCampoReq3 = new javax.swing.JLabel();
        labelCampoReq1 = new javax.swing.JLabel();
        labelCampoReq2 = new javax.swing.JLabel();
        labelCampoReq4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbxFormaPago = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Inscripción Kick Boxing");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Inscripción Kick Boxing");

        jLabel2.setText("Nombre");

        txtNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomKeyTyped(evt);
            }
        });

        jLabel3.setText("Apellido paterno");

        txtApPat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApPatKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApPatKeyTyped(evt);
            }
        });

        jLabel4.setText("Apellido materno");

        txtApMat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApMatKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApMatKeyTyped(evt);
            }
        });

        jLabel5.setText("Fecha de nacimiento");

        jLabel6.setText("Telefono");

        txtTel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelKeyTyped(evt);
            }
        });

        btnRealizarIns.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnRealizarIns.setText("Realizar inscripción");
        btnRealizarIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarInsActionPerformed(evt);
            }
        });

        labelCarga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cargando.gif"))); // NOI18N

        calendarFecNac.setBackground(new java.awt.Color(0, 0, 0));
        calendarFecNac.setDateFormatString("dd/MM/yyyy");

        labelCampoReq3.setForeground(new java.awt.Color(255, 0, 0));

        labelCampoReq1.setForeground(new java.awt.Color(255, 0, 0));

        labelCampoReq2.setForeground(new java.awt.Color(255, 0, 0));

        labelCampoReq4.setForeground(new java.awt.Color(255, 0, 0));

        jLabel7.setText("Forma de pago");

        cmbxFormaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Tarjeta" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(jLabel2)
                                .addGap(9, 9, 9))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(73, 73, 73)
                            .addComponent(jLabel6)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(labelCampoReq4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelCampoReq1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(labelCarga))
                            .addComponent(jLabel1))
                        .addGap(80, 90, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(calendarFecNac, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(txtApMat, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApPat))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCampoReq3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelCampoReq2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(33, 33, 33)
                                .addComponent(btnRealizarIns)
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(cmbxFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(55, 55, 55))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(82, 82, 82))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelCampoReq1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtApPat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelCampoReq2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCampoReq3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(txtApMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnRealizarIns)
                                .addGap(34, 34, 34)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbxFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(calendarFecNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6))
                                    .addComponent(labelCampoReq4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(17, 17, 17))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(labelCarga)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomKeyReleased
        Gym.validarCamposVacios(txtNom, labelCampoReq1);
        habilitarBoton();
    }//GEN-LAST:event_txtNomKeyReleased

    private void txtNomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomKeyTyped
        Gym.validarAlfabeto(evt);
        Gym.validarCantidadCaracteres(txtNom, evt, 30);
    }//GEN-LAST:event_txtNomKeyTyped

    private void txtApPatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApPatKeyTyped
        Gym.validarAlfabeto(evt);
        Gym.validarCantidadCaracteres(txtApPat, evt, 30);
    }//GEN-LAST:event_txtApPatKeyTyped

    private void txtApPatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApPatKeyReleased
        Gym.validarCamposVacios(txtApPat, labelCampoReq2);
        habilitarBoton();
    }//GEN-LAST:event_txtApPatKeyReleased

    private void txtApMatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApMatKeyTyped
        Gym.validarAlfabeto(evt);
        Gym.validarCantidadCaracteres(txtApMat, evt, 30);
    }//GEN-LAST:event_txtApMatKeyTyped

    private void txtApMatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApMatKeyReleased
        Gym.validarCamposVacios(txtApMat, labelCampoReq3);
        habilitarBoton();
    }//GEN-LAST:event_txtApMatKeyReleased

    private void txtTelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelKeyTyped
        Gym.validarNumeros(evt);
        Gym.validarCantidadCaracteres(txtTel, evt, 30);
    }//GEN-LAST:event_txtTelKeyTyped

    private void txtTelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelKeyReleased
        Gym.validarCamposVacios(txtTel, labelCampoReq4);
        habilitarBoton();
    }//GEN-LAST:event_txtTelKeyReleased

    private void btnRealizarInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarInsActionPerformed
        new Thread(){
            @Override
            public void run(){
                labelCarga.setVisible(true);
                int resultado = ejecutarInscripcionKick();
                if(resultado > 0){
                    JOptionPane.showMessageDialog(null, "Inscripción realizada correctamente",
                            "Aviso", JOptionPane.INFORMATION_MESSAGE);
                } else{
                    JOptionPane.showMessageDialog(null, "Error al realizar la inscripción",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
                labelCarga.setVisible(false);
            }
        }.start();
    }//GEN-LAST:event_btnRealizarInsActionPerformed

    private int ejecutarInscripcionKick(){
        int filasAfectadas = 0;
        Connection conexion = null;
        try{
            if(MySQLConnection.conectarBD()){
                conexion = MySQLConnection.getConexion();
                conexion.setAutoCommit(false);
                int idPago = Gym.registrarPago("Inscripción Kick Boxing", cmbxFormaPago, montoKickDiario * 30);
                String insertInscripcionQuery = "INSERT INTO InscripcionKick (ID_Kick, Nom_Kick, ApPat_Kick, "
                        + "ApMat_Kick, FecNac_Kick, Clase_Kick, Tel_Kick, Est_Kick, "
                        + "ID_Pago) VALUES (DEFAULT, ?, ?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement statementInscripcion = conexion.prepareStatement(insertInscripcionQuery, 
                        Statement.RETURN_GENERATED_KEYS);
                statementInscripcion.setString(1, txtNom.getText());
                statementInscripcion.setString(2, txtApPat.getText());
                statementInscripcion.setString(3, txtApMat.getText());
                java.util.Date fechaSeleccionada = calendarFecNac.getDate();
                java.sql.Date fechaSQL = new java.sql.Date(fechaSeleccionada.getTime());
                statementInscripcion.setDate(4, fechaSQL);
                System.out.println(age);
                if(age <= 10){
                    statementInscripcion.setString(5, "7-8");
                } else if(age >= 11 && age <= 17){
                    statementInscripcion.setString(5, "8-9");
                } else{
                    statementInscripcion.setString(5, "9-10");
                }
                statementInscripcion.setString(6, txtTel.getText());
                statementInscripcion.setString(7, "Activo");
                statementInscripcion.setInt(8, idPago);
                statementInscripcion.executeUpdate();
                ResultSet generatedKeysInscripcion = statementInscripcion.getGeneratedKeys();
                int idKick = -1;
                if(generatedKeysInscripcion.next()){
                    idKick = generatedKeysInscripcion.getInt(1);
                }
                String insertPagoKickQuery = "INSERT INTO PagoKick (ID_PagoK, ID_Kick, ID_Pago, FecVig_PagoK) "
                        + "VALUES (DEFAULT, ?, ?, ?)";
                PreparedStatement statementPagoKick = conexion.prepareStatement(insertPagoKickQuery);
                statementPagoKick.setInt(1, idKick);
                statementPagoKick.setInt(2, idPago);
                //Sumamos 30 dias para la fecha de vigencia del pago
                LocalDate localDate = LocalDate.now();
                LocalDate nuevaFecha = localDate.plusDays(30);
                
                java.util.Date fechaMasMes = java.util.Date.from(nuevaFecha.atStartOfDay(ZoneId.systemDefault()).toInstant());
            
                java.sql.Date fechaMasMesSQL = new java.sql.Date(fechaMasMes.getTime());
                
                statementPagoKick.setDate(3, fechaMasMesSQL);
                statementPagoKick.executeUpdate();
                
                conexion.commit();
                conexion.setAutoCommit(true);
                filasAfectadas = 1;
            }
        } catch(SQLException e){
            System.out.println("Error al ejecutar la transacción de inserción.");
            e.printStackTrace();
            if (conexion != null) {
                try {
                    conexion.rollback(); // Hacer rollback en caso de error
                    conexion.setAutoCommit(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
        return filasAfectadas;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRealizarIns;
    private com.toedter.calendar.JDateChooser calendarFecNac;
    private javax.swing.JComboBox<String> cmbxFormaPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel labelCampoReq1;
    private javax.swing.JLabel labelCampoReq2;
    private javax.swing.JLabel labelCampoReq3;
    private javax.swing.JLabel labelCampoReq4;
    private javax.swing.JLabel labelCarga;
    private javax.swing.JTextField txtApMat;
    private javax.swing.JTextField txtApPat;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtTel;
    // End of variables declaration//GEN-END:variables
}
